"""
Django settings for my_evernote_app project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from algoliasearch.search_client import SearchClient

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&o-!)5mk!besobscsbcapd-n+d2gaeq$yr7#yzz_x8zj2h#y^5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [u'*','ninque.pythonanywhere.com','127.0.0.1','https://8000-cs-597698942558-default.cs-asia-southeast1-seal.cloudshell.dev']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'notes',
    'search',
    'users',
    'rest_framework',
    'django_extensions',
    'corsheaders',
]

AUTH_USER_MODEL = 'users.CustomUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]
CORS_ORIGIN_WHITELIST = [
    'http://localhost:8080',  # Replace with your frontend's URL
    'http://127.0.0.1:8080',
]
ROOT_URLCONF = 'my_evernote_app.urls'
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',  # Allow access from frontend
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
}
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'my_evernote_app.wsgi.application'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'frontend/dist'),
]
# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# ... other settings ...
AUTH_USER_MODEL = 'users.CustomUser'

##Algolia search
ALGOLIA = {
    'APPLICATION_ID': '8J09NJJXXR',
    'API_KEY': '650a3a46d26c3dea26d23be94959fff4',
}

#ALGOLIA_APPLICATION_ID = os.environ.get('8J09NJJXXR')
#ALGOLIA_API_KEY = os.environ.get('650a3a46d26c3dea26d23be94959fff4')

#ALGOLIA_SEARCH_CLIENT = SearchClient.create(ALGOLIA_APPLICATION_ID, ALGOLIA_API_KEY)
#ALGOLIA_INDEX_NAME = 'notes'  # Name of your Algolia index
# Configure Algolia in Django
"""def index_note(sender, instance, **kwargs):
    #Index notes in Algolia when they are created or updated.
    index = ALGOLIA_SEARCH_CLIENT.init_index(ALGOLIA_INDEX_NAME)
    index.save_object({
        'objectID': str(instance.id),
        'title': instance.title,
        'content': instance.content,
    })
"""
# Connect the index_note function to the post_save signal for Note model

